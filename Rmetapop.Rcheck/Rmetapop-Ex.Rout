
R version 3.2.5 (2016-04-14) -- "Very, Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Rmetapop"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "Rmetapop-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('Rmetapop')
Loading required package: deSolve

Attaching package: ‘deSolve’

The following object is masked from ‘package:graphics’:

    matplot

Loading required package: dlm
Loading required package: ggplot2

Attaching package: ‘ggplot2’

The following object is masked from ‘package:dlm’:

    %+%

Loading required package: grid
Loading required package: gtools
Loading required package: mvtnorm
Loading required package: plyr
Loading required package: reshape2
Loading required package: slam
Loading required package: scales
Loading required package: coda
Loading required package: rstan
rstan (Version 2.9.0, packaged: 2016-01-05 16:17:47 UTC, GitRev: 05c3d0058b6a)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘rstan’

The following object is masked from ‘package:coda’:

    traceplot

Loading required package: VGAM
Loading required package: stats4
Loading required package: splines

Attaching package: ‘VGAM’

The following object is masked from ‘package:coda’:

    nvar

The following object is masked from ‘package:gtools’:

    logit

Loading required package: MASS
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("BH")
> ### * BH
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: BH
> ### Title: Beverton-Holt stock recruit relationship.
> ### Aliases: BH
> 
> ### ** Examples
> 
> h = 0.82                              # steepness of BC the central coast herring fishery
> B0 = 60000                            # tons in central coast in 2013/14
> S0 = B0 * 1000/mean(LVBweight(3:10))  # convert B0 to mean number of fish
> E0 = S0 * fecundity_age(9)            # eggs at 6 years old (scaled in millions)
> R0 = 5e+08                            # in millions
> alpha <- (E0 * (1 - h))/(4 * h * R0)
> beta <- (5 * h - 1)/(4 * h * R0)
> 
> sim_eggs <- sort(c(seq(from = 1, to = E0*1.02, length.out = 1000),E0/5,E0))   # project 
> R <- BH(sim_eggs, alpha=alpha,beta= beta)
> df1 <- data.frame(list(Recruits=R/1e6,Eggs=sim_eggs/1e12))
> df2 <- subset(df1,Eggs%in%(c(E0/5,E0)/1e12))
> 
> ggplot(aes(Eggs,Recruits),data= df1)+
+   geom_line()+
+   theme_bw()+
+   ylab("Recruits (Millions)")+
+   xlab("Eggs (Trillions)")+
+   geom_vline(aes(xintercept = Eggs),data= df2,linetype= "dotted")+
+   geom_hline(aes(yintercept = Recruits),data= df2,linetype= "dotted")+
+   geom_text(aes(x=Eggs+(E0/1e12)*.02, y= 1/beta/1e6*.25,label = c("20% E0", "E0")),data= df2,hjust= 0,vjust= -1,angle=90)+
+   geom_line(yintercept= 1/beta/1e6)+
+   geom_errorbar(aes(x=E0/1e12,ymax=max(Recruits),ymin= min(Recruits)),data= subset(df1,Eggs%in%(c(E0/5,E0)/1e12)),colour= "red")+
+   geom_errorbar(aes(x=E0/1e12,ymax=min(Recruits),ymin= 0),data= subset(df1,Eggs%in%(c(E0/5,E0)/1e12)),colour= "blue")+
+   geom_text(x= E0/1e12*.7,y= 1/beta/1e6*.2,label= "h (steepness)= blue/(red+blue)",data= df1[1,])+
+   scale_x_continuous(limits=c(0,E0/1e12*1.02),expand= c(0,0))+
+   scale_y_continuous(limits=c(0,1/beta/1e6*1.02),expand= c(0,0))
Error: Unknown parameters: yintercept
Execution halted
