{
    "contents" : "#####################\n# Script to prep the kelp timeseries data\n# for other analyses yielding \n# rawData - the rawData loaded and cleaned\n# rawDataMod - the rawData loaded and cleaned with no singletons\n# rawData3 - the rawData loaded and cleaned with no singletons or doubletons\n#\n# Last Changed 11/5/2014\n#####################\n\n\nlibrary(plyr)\nlibrary(ggplot2)\n\n\ngetValues <- function (alist) {\n  avec <- vector()\n  sapply(alist, function(x) avec <<- c(avec, x)) -> blank\n  avec\n}\n\n\n\n#rawData <- read.csv(\"../../clean_datasets/dataQA/CleanDataWithRegions.csv\")\n\nrawData <- read.csv(\"../derived_data/CleanDataWithRegions.csv\")\n\nrawData$sasDate <- as.Date(as.character(rawData$sasDate), format=\"%m/%d/%Y\")\n#get - out of ecoregions\nrawData$ECOREGION <- as.character(rawData$ECOREGION )\nrawData$ECOREGION <- gsub(\"/\", \"-\", rawData$ECOREGION )\nrawData$ECOREGION <- factor(rawData$ECOREGION)\n\n###########\n#deal with sites that only have one or sample point and exclude them\n###########\nsingletons <- ddply(rawData, .(study_ID, Study, Site, focalUnit), summarize, len = length(focalKelp))\nsingletons <- singletons[which(singletons$len==1),]\n\nsingletonIDX <- apply(singletons, 1, function(arow) which(rawData$Study==arow[2] & rawData$Site==arow[3] & rawData$focalUnit==arow[4]))\nif(length(singletonIDX)>0) rawDataMod <- rawData[-singletonIDX,]\n\n###########\n#deal with sites that only have no kelp\n###########\nnokelp <- ddply(rawDataMod, .(study_ID, Study, Site), summarize, kelp = sum(focalKelp, na.rm=T))\nnokelp <- nokelp[which(nokelp$kelp==0),]\n\nnokelpIDX <- getValues(apply(nokelp, 1, function(arow) which(rawDataMod$Study==arow[2] & rawDataMod$Site==arow[3]))) #used getvalues b/c list return\nif(length(nokelpIDX)>0) rawDataMod <- rawDataMod[-nokelpIDX,]\n\n#############\n# Rebalance factor levels\n#############\nrawDataMod$Study <- factor(rawDataMod$Study)\nrawDataMod$Site <- factor(rawDataMod$Site)\n\nrawDataMod$StudySite <- with(rawDataMod, paste(Study, Site, study_ID,trajectory_ID,sep=\"-\"))\n\n#############\n# Add a more meaningful date label\n#############\nrawDataMod$Date <- as.numeric(gsub(\"-\", \"\", rawDataMod$sasDate))\n\nrawDataMod$DaysSince1900 <- as.numeric(julian(as.POSIXlt(rawDataMod$sasDate, format = \"%y-%m-%d\"), \n       origin = as.POSIXct(\"1900-01-01\", tz = \"UTC\")))\n\nrawDataMod$YearsSince1900 <- rawDataMod$DaysSince1900/365.25\nrawDataMod$Decade <- floor(rawDataMod$year/10)*10\n\n###########\n# Create some standardized columns\n#\n# I bet this is easier with dplyr, but no time to learn\n###########\nstdMax <- function(x, samp=3) {\n  m <- mean(sort(x, decreasing=T, na.last=T)[1:samp])\n  x/m\n}\nstdZ <- function(x)  (x)/sd(x, na.rm=T)\n\nrawDataMod <- ddply(rawDataMod, .(ECOREGION, focalUnit), function(adf){\n  adf$stdByECOREGION <- stdMax(adf$focalKelp)\n  adf$stdByECOREGIONZ <- stdZ(adf$focalKelp)\n  adf\n}\n)\n\nrawDataMod <- ddply(rawDataMod, .(REALM, focalUnit), function(adf){\n  adf$stdByREALM <-  stdMax(adf$focalKelp)\n  adf$stdByREALMZ <- stdZ(adf$focalKelp)\n  adf\n}\n)\n\n\nrawDataMod <- ddply(rawDataMod, .(PROVINCE, focalUnit), function(adf){\n  adf$stdByPROVINCE <-  stdMax(adf$focalKelp)\n  adf$stdByPROVINCEZ <- stdZ(adf$focalKelp)\n  adf\n}\n)\n\n#########\n# Add a relative Latitude by Realm\n#########\n\nrawDataMod <- ddply(rawDataMod, .(REALM), function(adf){\n  adf$realLatByRealm <-  abs(adf$Latitude)-min(abs(adf$Latitude))\n  adf\n}\n)\n\n###########\n#make subdatasets of studies that have n or greater points\n###########\nshortData <- function(studyPoints=2, d = rawDataMod){\n  \n  smalls <- ddply(d, .(study_ID, Study, Site, trajectory_ID, focalUnit), summarize, len = length(focalKelp))\n  smalls <- smalls[which(smalls$len<=studyPoints),]\n  \n  smallsIDX <- apply(smalls, 1, function(arow) which(d$Study==arow[2] & d$Site==arow[3] & d$focalUnit==arow[5]))\n  smallsIDX <- getValues(smallsIDX)\n  if(length(smallsIDX)>0) return( d[-smallsIDX,])\n  \n  return(NA)\n}\n\n#add filter by year?\n\n###########\n#dataset of sites that only have > two sample points \n###########\nrawDataMod2 <- shortData()\n\n###########\n#dataset of sites that only > five sample points \n###########\nrawDataMod5 <- shortData(5)\n\n",
    "created" : 1424834643683.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "432942664",
    "id" : "84EDB6F6",
    "lastKnownWriteTime" : 1424359373,
    "path" : "~/Dropbox/nceas_kelp_climate_2013/temporal_change/R/analysis_scripts/temporal_kelp_prep.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}